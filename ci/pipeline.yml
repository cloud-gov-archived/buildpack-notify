resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:
- name: check-buildpack-updates
  type: time
  source:
    interval: 60m

- name: notify-src
  type: git
  source:
    uri: ((cg-buildpack-notify-git-uri))
    branch: ((cg-buildpack-notify-git-branch))
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: pull-request
  type: pull-request
  source:
    repository: ((cg-buildpack-notify-github-repo-name))
    access_token: ((status-access-token))
    disable_forks: true
    every: true

- name: state-staging
  type: s3-iam
  source:
    bucket: ((state-bucket-staging))
    versioned_file: state.json
    region_name: ((state-aws-region-staging))
    server_side_encryption: AES256

- name: state-production
  type: s3-iam
  source:
    bucket: ((state-bucket-production))
    versioned_file: state.json
    region_name: ((state-aws-region-production))
    server_side_encryption: AES256

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

jobs:
- name: pull-status-check
  plan:
  - get: pull-request
    version: every
    trigger: true
  - put: pull-request
    params:
      path: pull-request
      status: pending
  - task: build
    file: pull-request/ci/run-tests.yml
    input_mapping:
      notify-src: pull-request
    on_success:
      put: pull-request
      params:
        path: pull-request
        status: success
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure

- name: test-cg-buildpack-notify
  plan:
  - get: notify-src
    trigger: true
  - task: run-tests
    file: notify-src/ci/run-tests.yml

- name: notify-customers-staging
  plan:
  - get: check-buildpack-updates
    trigger: true
  - get: notify-src
    passed: [test-cg-buildpack-notify]
  - get: state
    resource: state-staging
  - task: do-notify
    file: notify-src/ci/notify.yml
    params:
      IN_STATE: state/state.json
      OUT_STATE: out-state/state.json
      DRY_RUN: ((dry-run-staging))
      CF_API: ((cf-api-staging))
      CLIENT_ID: ((cf-client-id-staging))
      CLIENT_SECRET: ((cf-client-secret-staging))
      SMTP_FROM: ((smtp-from-staging))
      SMTP_USER: ((smtp-user-staging))
      SMTP_PASSWORD: ((smtp-password-staging))
      SMTP_HOST: ((smtp-host-staging))
      SMTP_PORT: ((smtp-port-staging))
      SMTP_CERT: ((smtp-cert-staging))
  - put: state-staging
    params:
      file: out-state/state.json
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to notify customers with buildpack-notifier on ((cf-api-staging))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: notify-customers-production
  plan:
  - get: check-buildpack-updates
    trigger: true
  - get: notify-src
    passed: [notify-customers-staging]
  - get: state
    resource: state-production
  - task: do-notify
    file: notify-src/ci/notify.yml
    params:
      IN_STATE: state/state.json
      OUT_STATE: out-state/state.json
      DRY_RUN: ((dry-run-production))
      CF_API: ((cf-api-production))
      CLIENT_ID: ((cf-client-id-production))
      CLIENT_SECRET: ((cf-client-secret-production))
      SMTP_FROM: ((smtp-from-production))
      SMTP_USER: ((smtp-user-production))
      SMTP_PASSWORD: ((smtp-password-production))
      SMTP_HOST: ((smtp-host-production))
      SMTP_PORT: ((smtp-port-production))
      SMTP_CERT: ((smtp-cert-production))
  - put: state-production
    params:
      file: out-state/state.json
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to notify customers with buildpack-notifier on ((cf-api-production))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

